
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=sarah
%dev.quarkus.datasource.password=connor
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/quarkus_test

%dev.akrivis.evaluator.address=http://localhost:8082
%test.akrivis.evaluator.address=http://localhost:8081

# Jib extension
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.container-image.image=quay.io/lmolteni/akrivis-processor:latest

# Kubernetes extension
quarkus.kubernetes.env.configmaps=scorecards-configmap
quarkus.kubernetes.env.secrets=scorecards-secret
quarkus.kubernetes.env.mapping.db-username.from-secret=scorecards-secret
quarkus.kubernetes.env.mapping.db-username.with-key=DB_USERNAME
quarkus.kubernetes.env.mapping.db-password.from-secret=scorecards-secret
quarkus.kubernetes.env.mapping.db-password.with-key=DB_PASSWORD
quarkus.kubernetes.env.mapping.db-connection-string.from-secret=scorecards-secret
quarkus.kubernetes.env.mapping.db-connection-string.with-key=DB_CONNECTION_STRING
# This is a hack because the extension doesn't append the correct ghcr.io prefix where the image actually is
quarkus.kubernetes.init-task-defaults.wait-for-container.image=ghcr.io/groundnuty/k8s-wait-for:no-root-v1.7

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=${DB_USERNAME}
%prod.quarkus.datasource.password=${DB_PASSWORD}
%prod.quarkus.datasource.jdbc.url=${DB_CONNECTION_STRING}
%prod.quarkus.datasource.jdbc.max-size=8
%prod.quarkus.datasource.jdbc.min-size=2
%prod.quarkus.hibernate-orm.database.generation=none

%prod.akrivis.evaluator.address=${EVALUATOR_ADDRESS}:${EVALUATOR_PORT}


